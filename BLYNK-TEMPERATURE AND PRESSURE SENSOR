/*Codes for CLIK device. MIT License

Copyright (c) [2017] [Petar Mihalak] [petar dot mihalak at gmail dot com]

Permission is hereby granted, free of charge,
to any person obtaining a copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation the rights to use, copy,
modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

This code is written for making measurements of temperature and pressure which can be tracked using Blynk app.
Read our user manual for more information on how to connect and use Blynk app or just go on their official website
http://www.blynk.cc/ and learn more about it.

Petar Mihalak, 2017.
*/



#define BLYNK_PRINT Serial

#include <Wire.h>
#include <SFE_BMP180.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>


SFE_BMP180 pressure;

#define ALTITUDE 158 // Altitude of Zagreb, Croatia (CLIK team is situated here)
// You should get Auth Token in the Blynk App.
// Go to the Project Settings (nut icon).
char auth[] = "YourAuthToken";

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "YourWifiName";
char pass[] = "YourWifiPassword";


// Use Virtual pin 1 for temperature display
#define PIN_TEMP V1

// Use Virtual pin 2 for pressure display
#define PIN_PRESSURE V2

// Use Virtual pin 3 for pressure display
#define PIN_PRESSURE_ALTITUDE V3

// Use Virtual pin 4 for altitude display
#define PIN_ALTITUDE_PRESSURE V4

int relay1 = 12;
int relay2 = 14;
int psu_5 = 16;
int PIN_LED = 13; 
//LED integrated on board starts to blink when the connection
// between BLYNK and CLIK is made 
// This function tells Arduino what to do if there is a Widget
// which is requesting data for Virtual Pin (5)
  
BLYNK_READ(V1)
{
  char status;
  double T,P,p0,a;
  digitalWrite(PIN_LED, HIGH); // Turn on a LED when CLIK is connected to BLYNK
  //Read the data from BMP180 pressure and temperature sensor
  status = pressure.startTemperature();
  status = pressure.getTemperature(T);
  status = pressure.startPressure(1);
  status = pressure.getPressure(P,T);
  p0 = pressure.sealevel(P,ALTITUDE);
  a = pressure.altitude(P,p0);

//print data on serial port and send them on the Blynk app
  Serial.println(T);
  Blynk.virtualWrite(PIN_TEMP, T); // virtual pin

  Serial.println(P);
  Blynk.virtualWrite(PIN_PRESSURE, P); // virtual pin

  Serial.println(p0);
  Blynk.virtualWrite(PIN_PRESSURE_ALTITUDE, p0); // virtual pin

  Serial.println(a);
  Blynk.virtualWrite(PIN_ALTITUDE_PRESSURE, a); // virtual pin
  digitalWrite(PIN_LED, LOW);

}
void setup()
{
  // Set relay1, relay2 abd psu_5 as output pins
  pinMode(relay1, OUTPUT);
  pinMode(relay2, OUTPUT);
  pinMode(psu_5, OUTPUT);
  pinMode(PIN_LED, OUTPUT);
  // Set them to low
  digitalWrite(relay1, LOW);
  digitalWrite(relay2, LOW);
  digitalWrite(psu_5, LOW);
  // Debug console
  Serial.begin(9600);
  
  pressure.begin();
  Blynk.begin(auth, ssid, pass);
  // You can also specify server:
  //Blynk.begin(auth, ssid, pass, "blynk-cloud.com", 8442);
  //Blynk.begin(auth, ssid, pass, IPAddress(192,168,1,100), 8442);
}
void loop()
{ 
  Blynk.run();
  
}
