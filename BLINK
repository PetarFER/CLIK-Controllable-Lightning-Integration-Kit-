/*Codes for CLIK device. 
MIT License

Copyright (c) [2017] [Petar Mihalak] [petar dot mihalak at gmail dot com]

Permission is hereby granted, free of charge,
to any person obtaining a copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation the rights to use, copy,
modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


  
On-board blink
Turns on a LED on for one second, then off for one second, repeatedly.

CLIK devices have an on-board LED that can be controlled to be turned on or off, or blink repeatedly which is demonstrated in this code.
Digital pin attached to LED is digital pin 13.

Petar Mihalak, 2017.
*/

int relay1 = 12;  // Set ESP8266 pins for controlling the relay
int relay2 = 14;
int psu_5 = 16;	  // Pin for enabling the 5V PSU
int LED_onboard=13; 

//the setup function is executed just once when the program starts
void setup() {
  // initialize digital pin LED_onboard(digital pin 13) as an output.
  pinMode(LED_onboard, OUTPUT);
  pinMode(relay1, OUTPUT);  // Set ESP8266 pins for controlling the relay and for enabling the 5V PSU as outputs
  pinMode(relay2, OUTPUT);
  pinMode(psu_5, OUTPUT);
  // Set them to low state (turn them OFF, we don't need them)
  digitalWrite(psu_5, LOW);  
  digitalWrite(relay1, LOW);  
  digitalWrite(relay2, LOW);  
}

// the loop function runs over and over again constantly
void loop() {
  digitalWrite(LED_onboard, HIGH);   // turn the LED on (HIGH is the voltage level)
  delay(1000);                       // wait for a second, 1000 is 1 second, 2000 is 2 seconds, etc.
  digitalWrite(LED_onboard, LOW);    // turn the LED off by making the voltage LOW
  delay(1000);                       // wait for a second 
}
